AWSTemplateFormatVersion: 2010-09-09


Parameters:
  EnvironmentName:
    Description: An environment name that will be prefixed to resource names
    Type: String
  MachineID:
    Description: The AMI for EC2 Instance
    Type: string
    Default: ami-053b0d53c279acc90
  EC2InstanceType:
    Description: An environment name that will be prefixed to resource names
    Type: String
    Default: t3.medium

Resources:
  LBSecGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allow http to our load balancer
      VpcId:
        Fn::ImportValue: !Sub "${EnvironmentName}-VPCID"
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
      SecurityGroupEgress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
  WebServerSecGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allow http to our hosts and SSH from local only
      VpcId:
        Fn::ImportValue: !Sub "${EnvironmentName}-VPCID"
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 11.0.0.0/16
      SecurityGroupEgress:
        - IpProtocol: tcp
          FromPort: 0
          ToPort: 65535
          CidrIp: 0.0.0.0/0
  WebAppLaunchConfig:
    Type: AWS::AutoScaling::LaunchConfiguration
    Properties:
      UserData:
        Fn::Base64: !Sub |
          #!/bin/bash
          apt-get update -y
          apt-get install unzip awscli -y
          apt-get install apache2 -y
          systemctl start apache2.service
          sudo rm /var/www/html/index.html
          sudo aws s3 cp s3://devops-dummy-data/Archive.zip /var/www/html 
          sudo unzip /var/www/html/Archive.zip -d /var/www/html
          systemctl restart apache2.service

      ImageId: !Ref "MachineID"
      IamInstanceProfile:
        Fn::ImportValue: !Sub "${EnvironmentName}-IAM-ROLE-NAME"
      SecurityGroups:
        - Ref: WebServerSecGroup
      InstanceType: !Ref "EC2InstanceType"
      BlockDeviceMappings:
        - DeviceName: "/dev/sdk"
          Ebs:
            VolumeSize: "10"
            DeleteOnTermination: true
  WebAppGroup:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      VPCZoneIdentifier:
        - Fn::ImportValue: !Sub "${EnvironmentName}-PRIV-NETS"
      LaunchConfigurationName:
        Ref: WebAppLaunchConfig
      MinSize: "2"
      MaxSize: "4"
      DesiredCapacity: "2"
      TargetGroupARNs:
        - Ref: WebAppTargetGroup
  WebAppLB:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Subnets:
        - Fn::ImportValue: !Sub "${EnvironmentName}-PUB1-SN"
        - Fn::ImportValue: !Sub "${EnvironmentName}-PUB2-SN"
      SecurityGroups:
        - Ref: LBSecGroup
  Listener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      DefaultActions:
        - Type: forward
          TargetGroupArn:
            Ref: WebAppTargetGroup
      LoadBalancerArn:
        Ref: WebAppLB
      Port: "80"
      Protocol: HTTP
  ALBListenerRule:
    Type: AWS::ElasticLoadBalancingV2::ListenerRule
    Properties:
      Actions:
        - Type: forward
          TargetGroupArn: !Ref "WebAppTargetGroup"
      Conditions:
        - Field: path-pattern
          Values: [/]
      ListenerArn: !Ref "Listener"
      Priority: 1
  WebAppTargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      HealthCheckIntervalSeconds: 20
      HealthCheckPath: /
      HealthCheckProtocol: HTTP
      HealthCheckTimeoutSeconds: 8
      HealthyThresholdCount: 2
      Port: 80
      Protocol: HTTP
      UnhealthyThresholdCount: 5
      VpcId:
        Fn::ImportValue:
          Fn::Sub: "${EnvironmentName}-VPCID"
  ScaleUpPolicy:
    Type: "AWS::AutoScaling::ScalingPolicy"
    Properties:
      AdjustmentType: "ChangeInCapacity"
      AutoScalingGroupName: !Ref "WebAppGroup"
      Cooldown: "60"
      ScalingAdjustment: "1"
  ScaleDownPolicy:
    Type: "AWS::AutoScaling::ScalingPolicy"
    Properties:
      AdjustmentType: "ChangeInCapacity"
      AutoScalingGroupName: !Ref "WebAppGroup"
      Cooldown: "300"
      ScalingAdjustment: "-1"
  CPUUtilizationAlarm:
    Type: "AWS::CloudWatch::Alarm"
    Properties:
      AlarmName: "Linux-CPUUtilizationAlarm"
      ComparisonOperator: "GreaterThanOrEqualToThreshold"
      EvaluationPeriods: "1"
      MetricName: "CPUUtilization"
      Namespace: "AWS/EC2"
      Period: "60"
      Statistic: "Average"
      Threshold: "70"
      AlarmActions:
        - !Ref ScaleUpPolicy
      Dimensions:
        - Name: "AutoScalingGroupName"
          Value: !Ref "WebAppGroup"
      TreatMissingData: "missing"
  BillingAlarm:
    Type: "AWS::CloudWatch::Alarm"
    Properties:
      AlarmName: "Linux-BillingAlarm"
      ComparisonOperator: "GreaterThanThreshold"
      EvaluationPeriods: "1"
      MetricName: "EstimatedCharges"
      Namespace: "AWS/Billing"
      Period: "86400"
      Statistic: "Maximum"
      Threshold: "7"
      AlarmActions:
        - !Ref ScaleDownPolicy
      Dimensions:
        - Name: "Currency"
          Value: "USD"
      TreatMissingData: "missing"
  # CPUUtilizationAlarmLow:
  #   Type: "AWS::CloudWatch::Alarm"
  #   Properties: AlarmName

Outputs:
  WebsiteURL:
    Value: !Sub http://${WebAppLB.DNSName}
    Description: Public DNS of LoadBalancer
    Export:
      Name: !Sub ${EnvironmentName}-Public-DNS-URL
